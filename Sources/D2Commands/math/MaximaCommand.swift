import SwiftDiscord
import D2Permissions
import D2Utils

fileprivate let clearedInputChars = try! Regex(from: "\\|&,;")
fileprivate let maximaOutputPattern = try! Regex(from: "\\(%i1\\)\\s*(.+)")

public class MaximaCommand: StringCommand {
	public let description = "Transforms and solves mathematical expressions using Maxima"
	public let sourceFile: String = #file
	public let requiredPermissionLevel = PermissionLevel.basic
	private let latexRenderer: LatexRenderer?
	private var running = false
	
	public init() {
		do {
			latexRenderer = try LatexRenderer()
		} catch {
			latexRenderer = nil
			print("Could not initialize latex renderer for MaximaCommand: \(error)")
		}
	}
	
	public func invoke(withStringInput input: String, output: CommandOutput, context: CommandContext) {
		guard !running else {
			output.append("Wait for the Maxima command to finish")
			return
		}
		running = true
		
		do {
			let processedInput: String = clearedInputChars.replace(in: input, with: "")
			let maximaInput: String = (latexRenderer == nil) ? processedInput : "tex(\(processedInput))$"
			guard let result = try Shell().runSync("maxima", args: ["-q", "-r", maximaInput]) else {
				output.append("No output was generated by Maxima")
				return
			}
			
			if let renderer = latexRenderer, let maximaOutput = maximaOutputPattern.firstGroups(in: result) {
				// Parse and render TeX output
				renderLatexPNG(with: renderer, from: maximaOutput[1], to: output) {
					self.running = false
				}
			} else {
				// Render text output directly instead
				output.append("```\n\(result)\n```")
				running = false
			}
		} catch {
			print("An error occurred in MaximaCommand: \(error)")
			running = false
		}
	}
}
